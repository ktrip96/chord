{"ast":null,"code":"var _jsxFileName = \"/home/gnostis/chord/client/src/components/Chord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport Graph from './Graph';\nimport Menu from './Menu'; //  ***  Styling ***\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneralGrid = styled.div`\n  display: grid;\n  width: 100%;\n  height: 98vh;\n  grid-template-areas:\n    'h h h h m m'\n    'g g g g m m'\n    'g g g g m m'\n    'g g g g m m'\n    'g g g g m m'\n    'g g g g m m';\n`;\n_c = GeneralGrid;\nconst GraphGrid = styled.div`\n  border: 2px solid black;\n  font-size: 24px;\n  background-color: #f1faee;\n  grid-area: g;\n`;\n_c2 = GraphGrid;\nconst HeaderGrid = styled.div`\n  border: 2px solid black;\n  background-color: #e9c46a;\n  grid-area: h;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c3 = HeaderGrid;\nconst MenuGrid = styled.div`\n  border: 2px solid black;\n  background-color: #f4a261;\n  grid-area: m;\n`;\n_c4 = MenuGrid;\nexport default function Chord() {\n  _s();\n\n  // eslint-disable-next-line\n  const [serverPort, setServerPort] = useState(5000);\n  const [portArray, setPortArray] = useState([{\n    ip: 'localhost:5000'\n  }, {\n    ip: 'localhost:5001'\n  }, {\n    ip: 'locahost:5002'\n  }]); // useEffect(() => {\n  //   let socket = io(`http://localhost:${serverPort}`)\n  //   socket.emit('FRONT_initialise', { message: 'hello' })\n  //   socket.on('FRONT_send_data', (response) => {\n  //     console.log(response)\n  //   })\n  //   socket.on('FRONT_join', ({ joiner }) => {\n  //     // TODO\n  //     // θέλει προσοχή, γιατί αν είμαι στον κόμβο 5001, το socket.on αφορά το socket\n  //     // του 5002, και έχει δεν ακούω τον boostrap\n  //     // Πρέπει κάπου να κρατήσω το socket που άνοιξα με το bootstrap\n  //     console.log(`${joiner} joined the chord`)\n  //     setPortArray([...portArray, { ip: joiner }])\n  //     // κάνε update το array που κρατάει τα nodes που είναι αποθηκευμένα στο chord\n  //   })\n  //   // TODO\n  //   // socket.on('FRONT_depart', ({}) => {\n  //   //   // κάνε update το array που κρατάει τα nodes που είναι αποθηκευμένα στο chord\n  //   // })\n  // }, [serverPort])\n\n  const chordRender = portArray.map(({\n    ip\n  }, k) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => setServerPort(e.target.innerText.slice(-4)),\n      children: ip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, k, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(GeneralGrid, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderGrid, {\n      children: \"Welcome to the Chord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GraphGrid, {\n      children: chordRender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuGrid, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        ip: serverPort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chord, \"GhXGxZic5t/0BmiS4w27ratH8O0=\");\n\n_c5 = Chord;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GeneralGrid\");\n$RefreshReg$(_c2, \"GraphGrid\");\n$RefreshReg$(_c3, \"HeaderGrid\");\n$RefreshReg$(_c4, \"MenuGrid\");\n$RefreshReg$(_c5, \"Chord\");","map":{"version":3,"sources":["/home/gnostis/chord/client/src/components/Chord.js"],"names":["React","useEffect","useState","io","styled","Graph","Menu","GeneralGrid","div","GraphGrid","HeaderGrid","MenuGrid","Chord","serverPort","setServerPort","portArray","setPortArray","ip","chordRender","map","k","e","target","innerText","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;KAAMD,W;AAYN,MAAME,SAAS,GAAGL,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMC,S;AAON,MAAMC,UAAU,GAAGN,MAAM,CAACI,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAME,U;AASN,MAAMC,QAAQ,GAAGP,MAAM,CAACI,GAAI;AAC5B;AACA;AACA;AACA,CAJA;MAAMG,Q;AAMN,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CACzC;AAAEe,IAAAA,EAAE,EAAE;AAAN,GADyC,EAEzC;AAAEA,IAAAA,EAAE,EAAE;AAAN,GAFyC,EAGzC;AAAEA,IAAAA,EAAE,EAAE;AAAN,GAHyC,CAAD,CAA1C,CAH8B,CAS9B;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA,QAAMC,WAAW,GAAGH,SAAS,CAACI,GAAV,CAAc,CAAC;AAAEF,IAAAA;AAAF,GAAD,EAASG,CAAT,kBAChC;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAGC,CAAD,IAAOP,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,KAAnB,CAAyB,CAAC,CAA1B,CAAD,CAArC;AAAA,gBACGP;AADH;AAAA;AAAA;AAAA;AAAA;AADF,KAAUG,CAAV;AAAA;AAAA;AAAA;AAAA,UADkB,CAApB;AAQA,sBACE,QAAC,WAAD;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,QAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEL;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAtDuBD,K;;MAAAA,K","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport styled from 'styled-components'\nimport Graph from './Graph'\nimport Menu from './Menu'\n\n//  ***  Styling ***\n\nconst GeneralGrid = styled.div`\n  display: grid;\n  width: 100%;\n  height: 98vh;\n  grid-template-areas:\n    'h h h h m m'\n    'g g g g m m'\n    'g g g g m m'\n    'g g g g m m'\n    'g g g g m m'\n    'g g g g m m';\n`\nconst GraphGrid = styled.div`\n  border: 2px solid black;\n  font-size: 24px;\n  background-color: #f1faee;\n  grid-area: g;\n`\n\nconst HeaderGrid = styled.div`\n  border: 2px solid black;\n  background-color: #e9c46a;\n  grid-area: h;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst MenuGrid = styled.div`\n  border: 2px solid black;\n  background-color: #f4a261;\n  grid-area: m;\n`\n\nexport default function Chord() {\n  // eslint-disable-next-line\n  const [serverPort, setServerPort] = useState(5000)\n  const [portArray, setPortArray] = useState([\n    { ip: 'localhost:5000' },\n    { ip: 'localhost:5001' },\n    { ip: 'locahost:5002' },\n  ])\n\n  // useEffect(() => {\n  //   let socket = io(`http://localhost:${serverPort}`)\n\n  //   socket.emit('FRONT_initialise', { message: 'hello' })\n  //   socket.on('FRONT_send_data', (response) => {\n  //     console.log(response)\n  //   })\n\n  //   socket.on('FRONT_join', ({ joiner }) => {\n  //     // TODO\n  //     // θέλει προσοχή, γιατί αν είμαι στον κόμβο 5001, το socket.on αφορά το socket\n  //     // του 5002, και έχει δεν ακούω τον boostrap\n  //     // Πρέπει κάπου να κρατήσω το socket που άνοιξα με το bootstrap\n  //     console.log(`${joiner} joined the chord`)\n  //     setPortArray([...portArray, { ip: joiner }])\n  //     // κάνε update το array που κρατάει τα nodes που είναι αποθηκευμένα στο chord\n  //   })\n\n  //   // TODO\n  //   // socket.on('FRONT_depart', ({}) => {\n\n  //   //   // κάνε update το array που κρατάει τα nodes που είναι αποθηκευμένα στο chord\n  //   // })\n  // }, [serverPort])\n\n  const chordRender = portArray.map(({ ip }, k) => (\n    <div key={k}>\n      <button onClick={(e) => setServerPort(e.target.innerText.slice(-4))}>\n        {ip}\n      </button>\n    </div>\n  ))\n\n  return (\n    <GeneralGrid>\n      <HeaderGrid>Welcome to the Chord</HeaderGrid>\n      <GraphGrid>\n        {chordRender}\n        {/* <Graph /> */}\n      </GraphGrid>\n      <MenuGrid>\n        <Menu ip={serverPort} />\n      </MenuGrid>\n    </GeneralGrid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}