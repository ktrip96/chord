{"ast":null,"code":"var _jsxFileName = \"/home/gnostis/chord/client/src/components/Functionalities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FuncGrid = styled.div`\n  height: 50vh;\n`;\n_c = FuncGrid;\nexport default function Functionalities({\n  setResult,\n  ip\n}) {\n  _s();\n\n  const [showQuery, setShowQuery] = useState(false);\n  const [queryValue, setQueryValue] = useState('');\n  const [showInsert, setShowInsert] = useState(false);\n  const [insertValue, setInsertValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(FuncGrid, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let result = `The neighboors of ${ip} are: `;\n        setResult(result);\n      },\n      children: \"Show Neighbours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowQuery(value => !value);\n      },\n      children: showQuery ? 'Hide Query Input' : 'Query'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), showQuery && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        let result = `I run query for ${ip} looking for ${queryValue}`;\n        setResult(result);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setQueryValue(e.target.value),\n        type: \"text\",\n        value: queryValue,\n        placeholder: \"Type a value to search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowInsert(value => !value);\n      },\n      children: showInsert ? 'Hide Insert Input' : 'Insert Data '\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), showInsert && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        let result = `I run insert for ${ip} inserting ${insertValue}`;\n        setResult(result);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setInsertValue(e.target.value),\n        type: \"text\",\n        value: insertValue,\n        placeholder: \"Type some data to insert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Insert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Functionalities, \"GxMInGBLlqr1i8DgIjclz5OLYt0=\");\n\n_c2 = Functionalities;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FuncGrid\");\n$RefreshReg$(_c2, \"Functionalities\");","map":{"version":3,"sources":["/home/gnostis/chord/client/src/components/Functionalities.js"],"names":["React","useState","styled","FuncGrid","div","Functionalities","setResult","ip","showQuery","setShowQuery","queryValue","setQueryValue","showInsert","setShowInsert","insertValue","setInsertValue","result","value","e","preventDefault","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAI;AAC5B;AACA,CAFA;KAAMD,Q;AAIN,eAAe,SAASE,eAAT,CAAyB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAzB,EAA4C;AAAA;;AACzD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBACE,QAAC,QAAD;AAAA,4BAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIe,MAAM,GAAI,qBAAoBT,EAAG,QAArC;AACAD,QAAAA,SAAS,CAACU,MAAD,CAAT;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AACE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,YAAY,CAAEQ,KAAD,IAAW,CAACA,KAAb,CAAZ;AACD,OAHH;AAAA,gBAKGT,SAAS,GAAG,kBAAH,GAAwB;AALpC;AAAA;AAAA;AAAA;AAAA,YAbF,EAoBGA,SAAS,iBACR;AACE,MAAA,QAAQ,EAAGU,CAAD,IAAO;AACfA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAIH,MAAM,GAAI,mBAAkBT,EAAG,gBAAeG,UAAW,EAA7D;AACAJ,QAAAA,SAAS,CAACU,MAAD,CAAT;AACD,OALH;AAAA,8BAOE;AACE,QAAA,QAAQ,EAAGE,CAAD,IAAOP,aAAa,CAACO,CAAC,CAACE,MAAF,CAASH,KAAV,CADhC;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEP,UAHT;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,eAwCE;AACE,MAAA,OAAO,EAAE,MAAM;AACbG,QAAAA,aAAa,CAAEI,KAAD,IAAW,CAACA,KAAb,CAAb;AACD,OAHH;AAAA,gBAKGL,UAAU,GAAG,mBAAH,GAAyB;AALtC;AAAA;AAAA;AAAA;AAAA,YAxCF,EA+CGA,UAAU,iBACT;AACE,MAAA,QAAQ,EAAGM,CAAD,IAAO;AACfA,QAAAA,CAAC,CAACC,cAAF;AACA,YAAIH,MAAM,GAAI,oBAAmBT,EAAG,cAAaO,WAAY,EAA7D;AACAR,QAAAA,SAAS,CAACU,MAAD,CAAT;AACD,OALH;AAAA,8BAOE;AACE,QAAA,QAAQ,EAAGE,CAAD,IAAOH,cAAc,CAACG,CAAC,CAACE,MAAF,CAASH,KAAV,CADjC;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEH,WAHT;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmED;;GAzEuBT,e;;MAAAA,e","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst FuncGrid = styled.div`\n  height: 50vh;\n`\n\nexport default function Functionalities({ setResult, ip }) {\n  const [showQuery, setShowQuery] = useState(false)\n  const [queryValue, setQueryValue] = useState('')\n  const [showInsert, setShowInsert] = useState(false)\n  const [insertValue, setInsertValue] = useState('')\n\n  return (\n    <FuncGrid>\n      {/* Show neighboors */}\n      <button\n        onClick={() => {\n          let result = `The neighboors of ${ip} are: `\n          setResult(result)\n        }}\n      >\n        Show Neighbours\n      </button>\n\n      {/* Query */}\n\n      <button\n        onClick={() => {\n          setShowQuery((value) => !value)\n        }}\n      >\n        {showQuery ? 'Hide Query Input' : 'Query'}\n      </button>\n      {showQuery && (\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n            let result = `I run query for ${ip} looking for ${queryValue}`\n            setResult(result)\n          }}\n        >\n          <input\n            onChange={(e) => setQueryValue(e.target.value)}\n            type='text'\n            value={queryValue}\n            placeholder='Type a value to search'\n          />\n          <button type='submit'>Submit Query</button>\n        </form>\n      )}\n\n      {/* Insert */}\n\n      <button\n        onClick={() => {\n          setShowInsert((value) => !value)\n        }}\n      >\n        {showInsert ? 'Hide Insert Input' : 'Insert Data '}\n      </button>\n      {showInsert && (\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n            let result = `I run insert for ${ip} inserting ${insertValue}`\n            setResult(result)\n          }}\n        >\n          <input\n            onChange={(e) => setInsertValue(e.target.value)}\n            type='text'\n            value={insertValue}\n            placeholder='Type some data to insert'\n          />\n          <button type='submit'>Submit Insert</button>\n        </form>\n      )}\n    </FuncGrid>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}